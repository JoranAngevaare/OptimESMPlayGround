# Test package every time

name: Pytest

# Controls when the action will run.

# Trigger this code when a new release is published
on:
  workflow_dispatch:
#  release:
#    types: [ created ]
  pull_request:
  push:
    branches:
      - master

jobs:
  update:
    name: "(${{ matrix.os }}, ${{ matrix.python-version }}, ${{ matrix.test }})"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: False
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]
        python-version: [ "3.8", ]
        test: [ 'coveralls', ]
        exclude:
          - os: windows-latest
            test: coveralls
          - python-version: 3.9
            test: coveralls
          - python-version: "3.10"
            test: coveralls
          - test: "fail-fast"
            os: windows-latest
          - test: "fail-fast"
            python-version: 3.9
          - test: "fail-fast"
            python-version: "3.10"
    defaults:
      run:
        # This is needed otherwise we can't activate the conda installation
        shell: bash -l {0}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: "synda"
      - name: run install
        run:
          |
            conda info
            conda activate synda
            git clone https://github.com/JoranAngevaare/optim_esm_base.git base_install
            cd base_install
            bash install_software.sh || { echo 'ERROR' ; exit 1; }
            cd ..
      - name: Test package (linux)
        if: matrix.os == 'ubuntu-latest' && matrix.test == 'pytest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coverage run --source=optism_esm_tools -m pytest -vsx --durations 0
          coverage run --append --source=optism_esm_tools -m pytest --nbmake -n=auto ./notebooks
          coveralls --service=github
      # - name: Coveralls
      #   if: matrix.test == 'coveralls'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NUMBA_DISABLE_JIT: 1
      #   run: |
      #     export RUN_TEST_EXTENDED=1
      #     coverage run --source=optism_esm_tools setup.py test -v
      #     coverage run --append --source=optism_esm_tools -m pytest --nbmake -n=auto ./notebooks
      #     coveralls --service=github
      - name: goodbye
        run: echo goodbye
